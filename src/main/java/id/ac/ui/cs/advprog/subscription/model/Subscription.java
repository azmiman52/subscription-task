package id.ac.ui.cs.advprog.subscription.model;import id.ac.ui.cs.advprog.subscription.model.enumeration.SubscriptionStatus;import id.ac.ui.cs.advprog.subscription.model.enumeration.SubscriptionType;import id.ac.ui.cs.advprog.subscription.mock.Box;import jakarta.persistence.Entity;import jakarta.persistence.Id;import jakarta.persistence.Table;import lombok.Getter;import lombok.Setter;@Getter@Setter@Entity@Table(name = "subscriptions")public class Subscription {    @Id    private String subscriptionID;    private SubscriptionType subscriptionType;    private SubscriptionStatus subscriptionStatus;    private Box subscribedBox;    private SubscriptionState subscriptionState;    public Subscription() {    }    public Subscription(String subscriptionID, SubscriptionType subscriptionType,                        SubscriptionStatus subscriptionStatus, Box subscribedBox) {        if (subscriptionID == null || subscriptionID.isEmpty()) {            throw new IllegalArgumentException("Subscription ID cannot be null or empty");        }        if (subscriptionType == null) {            throw new IllegalArgumentException("Subscription type cannot be null");        }        if (subscriptionStatus == null) {            throw new IllegalArgumentException("Subscription status cannot be null");        }        if (subscribedBox == null) {            throw new IllegalArgumentException("Subscribed box cannot be null");        }        this.subscriptionID = subscriptionID;        this.subscriptionType = subscriptionType;        this.subscriptionStatus = subscriptionStatus;        this.subscribedBox = subscribedBox;        this.subscriptionState = new PendingState(this);    }    public void activateSubscription() {        this.subscriptionState.activateSubscription();    }    public void cancelSubscription() { this.subscriptionState.cancelSubscription(); }}