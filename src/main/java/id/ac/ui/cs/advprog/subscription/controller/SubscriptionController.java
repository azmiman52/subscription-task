package id.ac.ui.cs.advprog.subscription.controller;import id.ac.ui.cs.advprog.subscription.model.Subscription;import id.ac.ui.cs.advprog.subscription.service.interfaces.SubscriptionService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;import java.util.logging.Level;import java.util.logging.Logger;@RestController@RequestMapping("/subscription")public class SubscriptionController {    @Autowired    private SubscriptionService subscriptionService;    private static final Logger logger = Logger.getLogger(SubscriptionService.class.getName());    public SubscriptionController() {        // Set logging level to INFO        logger.setLevel(Level.INFO);    }    @GetMapping("/subscriptions" )    public ResponseEntity<List<Subscription>> getSubscriptions() {        return subscriptionService.getSubscriptions();    }    @GetMapping("/list")    public ResponseEntity<List<Subscription>> getAllSubscriptions() {        return subscriptionService.findAll();    }    @GetMapping("/{subscriptionId}")    public ResponseEntity<Subscription> getSubscriptionById(@PathVariable String subscriptionId) {        return subscriptionService.getSubscriptionById(subscriptionId);    }    @PostMapping("/create")    public ResponseEntity<Subscription> createSubscription(@RequestBody Subscription subscription) {        return subscriptionService.createSubscription(subscription);    }    @PutMapping("/update/{subscriptionId}")    public ResponseEntity<Subscription> updateSubscription(@PathVariable String subscriptionId, @RequestBody Subscription subscription) {        return subscriptionService.updateSubscription(subscriptionId, subscription);    }    @DeleteMapping("/delete/{subscriptionId}")    public ResponseEntity<Subscription> deleteSubscription(@PathVariable String subscriptionId) {        return subscriptionService.deleteSubscriptionById(subscriptionId);    }}